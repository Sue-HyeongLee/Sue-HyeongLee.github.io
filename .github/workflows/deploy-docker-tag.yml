name: Docker Image CI (Upload Tag)

# 이 워크플로우는 Docker 이미지를 CI/CD(Continuous Integration/Continuous Deployment) 프로세스를 통해 빌드하고 푸시하는 작업을 정의하고 있다.

on: # v와 관련된 tag가 push될 시에 실행됨.
  push:
    tags:
      - 'v*'

jobs:

  build: # job 이름이 build.

    runs-on: ubuntu-latest # 최신 우분투에서 실행.

    steps:
    - name: Checkout # github 저장소의 코드를 현재 작업환경에 체크아웃(복제)하는데 사용됩니다.
      uses: actions/checkout@v3 # 이것의 내용은 위와 같습니다.
      
    - name: Set up QEMU # QEMU를 설정하기 위한 액션이다.
      uses: docker/setup-qemu-action@v2  # 도커 이미지를 빌드하고, 테스트하는 등의 작업을 수행할 떄 QEMU를 사용하는 경우에 유용하다.
      
    - name: Buildx
      uses: docker/setup-buildx-action@v2 #docker/setup-buildx-action을 사용하면 워크플로우에서 Buildx를 설정하고, 필요한 도커 빌드 작업을 실행할 수 있다.
      
    -
      name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: amirpourmand/al-folio
      # 이 워크플로우는 "Docker meta"라는 이름을 가지며, docker/metadata-action을 사용하여 amirpourmand/al-folio라는 도커 이미지에 대한 메타데이터를 생성한다. 

    - name: Login
      uses: docker/login-action@v2
      # 이 작업은 Docker 이미지를 빌드하고 푸시하기 전에 레지스트리에 로그인하는 단계이다.
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push
      uses: docker/build-push-action@v3
      # 도커 이미지를 빌드하고 푸쉬하는데 사용된다.
      with:
        context: . # 현재 디렉토리를 사용할 컨텍스트 디렉토리로 설정.
        platforms: linux/amd64,linux/arm64/v8 # 플랫폼들을 지정하고 있다.
        push: ${{ github.event_name != 'pull_request' }} # 도커 이미지를 pull_request가 아니면 푸쉬한다.
        tags: ${{ steps.meta.outputs.tags }} # 도커 이미지에 지정할 태그를 메타 작업에서 나온 태그로 설정.
        labels: ${{ steps.meta.outputs.labels }} # 지정할 라벨을 메타 작업에서 나온 라벨로 설정.

